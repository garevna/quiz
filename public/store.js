(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{138:function(e,t,s){"use strict";s.r(t);const a=s(0),i=s(128);a.use(i),t.default=new i.Store({state:{quizName:null,quizReady:!1,mainData:null,mainDataIsReady:!1,quizData:{score:0,maxScore:0,levels:[]},quizRawData:null,backgroundPictures:[402,702,516,404,405,406,705,408,509,440,410,448,704,417,147,316],gameOverPictureURL:"https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSZVhfeXVPblhxNzA",successPictureURL:"https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSd3U0S09YUkkwanc",failurePictureURL:"https://drive.google.com/uc?export=download&id=0BxaMB69y7fvSMzNOUGc3QndEOGM",userInfo:{login:"",fname:"",name:"",registered:"",passHash:"",photoURL:""},userResultsJSON:"",userResults:{}},getters:{getUserResults(e){},quizLevelData:e=>{let t={balls:e.quizRawData.split(/[\s]*____quizBalls____[\s]*/)[1],type:e.quizRawData.split(/[\s]*____quizType____[\s]*/)[1],question:e.quizRawData.split(/[\s]*____quizQuestion____[\s]*/)[1],picture:e.quizRawData.split(/[\s]*____quizPicture____[\s]*/)[1],js:e.quizRawData.split(/[\s]*____quizJS____[\s]*/)[1],html:e.quizRawData.split(/[\s]*____quizHTML____[\s]*/)[1],rightInput:e.quizRawData.split(/[\s]*____rightInput____[\s]*/)[1],inputLegendBefore:e.quizRawData.split(/[\s]*____inputLegendBefore____[\s]*/)[1]||"",inputLegendAfter:e.quizRawData.split(/[\s]*____inputLegendAfter____[\s]*/)[1]||"",choiceVariants:e.quizRawData.split(/[\s]*____choiceVariants____[\s]*/)[1],rightChoicesNums:e.quizRawData.split(/[\s]*____rightChoice____[\s]*/)[1],wrongContent:e.quizRawData.split(/[\s]*____wrongContent____[\s]*/)[1],rightContent:e.quizRawData.split(/[\s]*____rightContent____[\s]*/)[1]};return t.balls=Number(t.balls?t.balls.split(/[\s]*____/)[0]:5),t.type=t.type.split(/[\s]*____/)[0],t.picture=t.picture?t.picture.split(/[\s]*____/)[0]:null,t.js=t.js?t.js.split(/[\s]*____/)[0]:null,t.html=t.html?t.html.split(/[\s]*____/)[0]:null,t.question=t.question.split(/[\s]*____/)[0],"choice"===t.type?(e.quizRawData,t.choiceVariants=t.choiceVariants.split(/[\s]*____/)[0].split(String.fromCharCode(10)).map(e=>e.trim().split(String.fromCharCode(10)).join("").split(String.fromCharCode(13)).join("")),t.rightChoicesNums=t.rightChoicesNums.split(/[\s]*____/)[0].split(",").map(e=>Number(e.trim().split(String.fromCharCode(10)).join("").split(String.fromCharCode(13)).join("")))):"input"===t.type?(e.quizRawData,t.rightInput=t.rightInput.split(/[\s]*____/)[0].split(String.fromCharCode(10)).filter(e=>e.length>0),t.inputLegendBefore=t.inputLegendBefore.split(/[\s]*____/)[0],t.inputLegendAfter=t.inputLegendAfter.split(/[\s]*____/)[0]):(e.quizRawData,t.wrongContent=t.wrongContent.split(/[\s]*____/)[0],t.rightContent=t.rightContent.split(/[\s]*____/)[0]),t},dataIsReady:e=>e.mainDataIsReady,mainMenuReady:e=>e.mainDataIsReady,mainMenuItems:e=>e.mainDataIsReady?e.mainData.map(e=>e.name):[]},mutations:{setQuizName:(e,t)=>e.quizName=t,initQuizData:e=>{e.quizData={gameOverPictureURL:e.gameOverPictureURL,successPictureURL:e.successPictureURL,failurePictureURL:e.failurePictureURL,score:0,maxScore:0,lives:10,levels:[]}},getRawData:(e,t)=>e.quizRawData=t,pushLevelData:(e,t)=>{e.quizData.levels.push(t)},buildQuiz:e=>{for(var t of(e.quizData.maxScore=0,e.quizData.levels))e.quizData.maxScore+=t.balls*(t.rightChoicesNums?t.rightChoicesNums.length:1);e.quizReady=!0},saveQuizResults:(e,t)=>{e.quizData.score+=t.score,e.quizData.lives-=t.lives},setMainData:(e,t)=>{e.mainData=t,e.mainDataIsReady=!0,e.mainMenuOptions=t.map(e=>e.name)},breakUser(e){["login","fname","name","registered","passHash","photoURL"].forEach(t=>a.set(e.userInfo,t,null))},setUser:(e,t)=>{["login","fname","name","registered","passHash","photoURL"].forEach(s=>a.set(e.userInfo,s,t[s]))},setUserResults:(e,t)=>e.userResults=JSON.parse(JSON.stringify(t)),setCookie:e=>{document.cookie=`user=${e.userInfo.login}`,document.cookie=`pass=${e.userInfo.passHash}`},saveAttemptResult:e=>{!e.userResults[e.quizName]&&(e.userResults[e.quizName]=[]),e.userResults[e.quizName].push(Math.round(100*e.quizData.score/e.quizData.maxScore)+"%"),e.userResultsJSON=JSON.stringify(e.userResults),localStorage.setItem(`${e.userInfo.fname} ${e.userInfo.name}`,e.userResultsJSON)}},actions:{async getUserInfo({commit:e,state:t},s){let a=await fetch(`https://garevna-js-quiz.glitch.me/forms/${s}`);if(0===a.headers.get("Content-Type").indexOf("application/json"))return{error:`User ${s} was not found`};let i=await a.formData(),u=i.get("avatar");return e("setUser",{login:s,name:i.get("name"),fname:i.get("lastName"),passHash:i.get("passHash"),photoURL:u instanceof Object?URL.createObjectURL(u):null,registered:i.get("registered")}),t.userResultsJSON=i.get("results"),e("setUserResults",JSON.parse(t.userResultsJSON)),t.userInfo},getQuizData(e,t){e.state.quizReady=!1,e.commit("initQuizData"),t.files.forEach(async s=>{let a=await(await fetch(`data/quiz/${t.folder}/${s}.md`).catch(e=>console.warn(`There is no such file: data/quiz/${t.folder}/${s}.md`))).text();e.commit("getRawData",a),e.commit("pushLevelData",e.getters.quizLevelData),e.commit("buildQuiz")})},saveResults(e,t){let s=new FormData;s.set("results",JSON.stringify(e.state.userResults)),fetch(`https://garevna-js-quiz.glitch.me/form/${e.state.userInfo.login}`,{method:"PATCH",body:s}).then(e=>null,e=>console.warn(e))}}})}}]);