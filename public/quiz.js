(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{115:function(t,n,e){var r=e(116);"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,e(2).default)("54eaaed6",r,!1,{})},116:function(t,n,e){var r=e(117);"string"==typeof r&&(r=[[t.i,r,""]]);var s={insert:"head",singleton:!1};e(3)(r,s);r.locals&&(t.exports=r.locals)},117:function(t,n,e){n=t.exports=e(1)(!1);var r=e(118),s=r(e(119)),o=r(e(120)),a=r(e(121));n.push([t.i,"/* .quiz-container {\r\n    position: fixed;\r\n    top:20%;\r\n    bottom:10%;\r\n    left:8%;\r\n    right:8%;\r\n    border:solid 1px white;\r\n    overflow:auto;\r\n    padding: 10px 20px;\r\n} */\r\n\r\n.quiz-container{\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    bottom:30px;\r\n    right:0\r\n}\r\n\r\n.quiz-container-actions {\r\n    position: fixed;\r\n    height:50px;\r\n    bottom:10%;\r\n    left:8%;\r\n    right:8%;\r\n    border:solid 1px white;\r\n}\r\n.quiz-container-question {\r\n    position: fixed;\r\n    top:10%;\r\n    height:auto;\r\n    left:8%;\r\n    right:8%;\r\n    border:solid 1px white;\r\n    padding: 10px 20px;\r\n}\r\n.badge {\r\n    margin: 18px 20px 5px 20px;\r\n}\r\n.text--shadow {\r\n    font-weight: bold;\r\n    text-shadow: 2px 2px 4px #000000aa;\r\n}\r\n\r\n.finishSlide, .successSlide, .failureSlide {\r\n  height:700px;\r\n  background-size: cover;\r\n}\r\n.finishSlide {\r\n  background-image: url("+s+");\r\n}\r\n.successSlide {\r\n  background-image: url("+o+");\r\n}\r\n.failureSlide {\r\n  background-image: url("+a+");\r\n}\r\n",""])},118:function(t,n,e){"use strict";t.exports=function(t,n){return n||(n={}),"string"!=typeof(t=t.__esModule?t.default:t)?t:(/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),n.hash&&(t+=n.hash),/["'() \t\n]/.test(t)||n.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t)}},119:function(t,n,e){t.exports=e.p+"images/game-over.gif"},120:function(t,n,e){t.exports=e.p+"images/success.gif"},121:function(t,n,e){t.exports=e.p+"images/failure.gif"},122:function(t,n,e){var r=e(123);"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,e(2).default)("4cd6c896",r,!1,{})},123:function(t,n,e){var r=e(124);"string"==typeof r&&(r=[[t.i,r,""]]);var s={insert:"head",singleton:!1};e(3)(r,s);r.locals&&(t.exports=r.locals)},124:function(t,n,e){(t.exports=e(1)(!1)).push([t.i,"textarea {\r\n  background-color: var(--darkPrimary)!important;\r\n  letter-spacing: 0.7px!important;\r\n  padding: 20px!important;\r\n  color: #aab!important;\r\n}\r\ncode {\r\n    /* background-color: var(--darkPrimary)!important; */\r\n    background-color: transparent;\r\n    font-size: 1.05rem!important;\r\n    color: #abb!important;\r\n    box-shadow: none!important;\r\n    font-weight: normal!important;\r\n    margin: 20px;\r\n    outline: none;\r\n}\r\n\r\n.var, .let, .const, .function,\r\n.new, .if, .for, .yield, .async, .await {\r\n  color: var(--specWordsColor);\r\n  font-style:italic;\r\n  font-weight:bold;\r\n}\r\n\r\n.true, .false {\r\n  color: rgb(2, 218, 192);\r\n}\r\n\r\n.undefined, .null, .NaN, .Infinity {\r\n  color: var(--userNamesColor);\r\n  font-weight:bold;\r\n  font-style:italic;\r\n}\r\n\r\n.Object, .Number, .Date,\r\n.String, .Boolean, .Math,\r\n.Error, .Event, .JSON {\r\n  color: rgb(6, 139, 248);\r\n}\r\n\r\n.constructor, .class {\r\n  color: rgb(6, 200, 248);\r\n}\r\n\r\n.__proto__, .prototype, .this {\r\n  color: var(--greenText);\r\n}\r\n\r\n.window, .document, .console,\r\n.location, .history,\r\n.localStorage, .cookie {\r\n  color: rgb(4, 213, 228);\r\n}\r\n\r\n.fetch, .XMLHttpRequest,\r\n.Response, .Request,\r\n.Promise, .Headers,\r\n.URL, .Reader, .File,\r\n.Buffer, .Array, .Blob {\r\n    color: rgb(255, 166, 0);\r\n}\r\n\r\n.try, .then, .catch, .arrow, .return {\r\n    color: rgb(255, 200, 150);\r\n}\r\n\r\n.literal {\r\n  color: rgb(176, 182, 125);\r\n  font-style: italic;\r\n  font-weight:lighter;\r\n}\r\n\r\n.replaced {\r\n  color: red;\r\n}\r\n",""])},125:function(t,n,e){var r=e(126);"string"==typeof r&&(r=[[t.i,r,""]]),r.locals&&(t.exports=r.locals);(0,e(2).default)("ca911d96",r,!1,{})},126:function(t,n,e){var r=e(127);"string"==typeof r&&(r=[[t.i,r,""]]);var s={insert:"head",singleton:!1};e(3)(r,s);r.locals&&(t.exports=r.locals)},127:function(t,n,e){(t.exports=e(1)(!1)).push([t.i,".tag {\r\n  color: rgb(255, 170, 255);\r\n}\r\n.attr {\r\n  color: rgb(0, 180, 255);\r\n}\r\n.values {\r\n  color: rgb(255, 255, 170);\r\n}\r\n",""])},139:function(t,n,e){"use strict";e.r(n);e(115);var r={props:["params"],data:function(){return{dialog:!0,activeTab:null,snackbar:!1,showCube:!0,spacing:"px-xs-2 px-sm-4 px-md-6 px-lg-8 px-xl-10 mx-xs-0 mx-sm-4 mx-md-6 mx-lg-12",mainHeight:0,maxWidth:900,question:null,controls:null}},watch:{params:function(t,n){this.activeTab="0"}},methods:{answerIsReady:function(){this.$parent.validateAnswer(),this.snackbar=!0},nextLevel:function(){this.snackbar=!1,this.$parent.nextLevel()},resizeWin(){this.mainHeight=this.question&&this.controls?window.innerHeight-this.question.offsetHeight-this.controls.offsetHeight-96:.7*window.innerHeight}},components:{},mounted:function(){this.question=document.getElementById("question"),this.controls=document.getElementById("controls"),this.resizeWin()},template:'\n    <v-container text-xs-center\n                 fluid\n                 class="dark-glass">\n          <v-card id="question" :max-width="maxWidth" class="mx-auto dark-glass">\n            <slot name="question"></slot>\n          </v-card>\n\n          <v-container fluid class="transparent">\n\n              <v-card fluid :max-width="maxWidth"\n                            :height="mainHeight"\n                            v-resize="resizeWin"\n                            class="mx-auto dark-glass"\n                            style="overflow-y: auto">\n\n                    <v-tabs v-model="activeTab" slider-color="warning" dark class="dark-glass">\n\n                        <v-tab  v-for="( item, index ) in params" :key="index" ripple>\n                            <span v-if=\'item.tabSymbol\'>{{ item.tabSymbol }}</span>\n                            <v-icon v-if=\'item.tabIcon\'>{{ item.tabIcon }}</v-icon>\n                        </v-tab>\n\n                        <v-tab-item v-for="( item, index ) in params" :key="index">\n                            <v-card dark text transparent>\n                                <slot :name="item.slotName"></slot>\n                            </v-card>\n                        </v-tab-item>\n                    </v-tabs>\n              </v-card>\n\n              \x3c!--<canvas-element></canvas-element>--\x3e\n\n          </v-container>\n\n          <v-card id="controls" :max-width="maxWidth" dark elevation=0 class="transparent mx-auto dark-glass">\n              <v-row>\n                <v-col cols="auto">\n                  <v-card class="py-1 px-2">\n                    <v-badge color="success">\n                      <span slot = "badge">{{ $parent.lives }}</span>\n                        <v-icon color = "warning">\n                            battery_charging_full\n                        </v-icon>\n                    </v-badge>\n                  </v-card>\n                </v-col>\n\n                <v-col cols="auto">\n                  <v-card class="py-1 px-2">\n                    <v-badge color = "success">\n                        <span slot = "badge">{{ $parent.score }}</span>\n                        <span> {{ $parent.$parent.maxScore }} </span>\n                    </v-badge>\n                  </v-card>\n                </v-col>\n\n                <v-spacer></v-spacer>\n\n                <v-col cols="auto">\n                  <v-card>\n                    <v-tooltip top\n                               v-if = "!$parent.showResults && $parent.quizData.type !== \'finish\'"\n                               color="transparent">\n                      <template v-slot:activator="{ on }">\n                        <v-btn icon @click = "answerIsReady"\n                                    v-on= "on">\n                            <v-icon>send</v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Check result</span>\n                    </v-tooltip>\n                  </v-card>\n                </v-col>\n\n                <v-col cols="auto">\n                  <v-card>\n                    <v-tooltip top\n                               v-if = "$parent.quizData.type !== \'finish\'"\n                               color="transparent">\n                      <template v-slot:activator="{ on }">\n                        <v-btn icon @click = "nextLevel"\n                                    v-on="on">\n                            <v-icon>forward</v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Next</span>\n                    </v-tooltip>\n                  </v-card>\n                </v-col>\n\n                <v-col cols="auto">\n                  <v-card>\n                    <v-tooltip top color="transparent">\n                      <template v-slot:activator="{ on }">\n                        <v-btn icon @click = "$parent.exitQuiz"\n                                    v-on="on">\n                            <v-icon>exit_to_app</v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Exit</span>\n                    </v-tooltip>\n                  </v-card>\n                </v-col>\n            </v-row>\n          </v-card>\n\n          <slot name="snackbar"></slot>\n\n          <v-snackbar slot="snackbar"\n                      :timeout="5000"\n                      left top\n                      multi-line\n                      vertical\n                      color="#333"\n                      v-if = "snackbar"\n                      v-model = "snackbar">\n              <v-row>\n                <v-col cols="auto">\n                  <v-badge xs1 color="success">\n                        <span slot = "badge">{{ $parent.levelResults.right }}</span>\n                        <v-icon color = "warning">\n                            thumb_up\n                        </v-icon>\n                  </v-badge>\n                </v-col>\n                <v-col cols="auto">\n                  <v-badge xs1 color="error">\n                    <span slot = "badge">{{ $parent.levelResults.wrong }}</span>\n                    <v-icon color = "warning">\n                        thumb_down\n                    </v-icon>\n                  </v-badge>\n                </v-col>\n                <v-spacer></v-spacer>\n                <v-col cols="auto">\n                  <v-btn  text icon color="warning"\n                          @click.native = "snackbar = false">\n                      <v-icon>close</v-icon>\n                  </v-btn>\n                </v-col>\n              </v-row>\n          </v-snackbar>\n    </v-container>\n    '};var s={props:["text","contenteditable"],data:function(){return{classes:["this","function","let ","var ","const ","new ","if ","for ","return","null","NaN","undefined","false","true","Infinity","Object","Number","Array","Buffer","Blob","Boolean","String","Date","Error","Symbol","prototype","__proto__","window","document","console","localStorage","cookie","history","fetch","XMLHttpRequest","File","Promise","yield","async","await","Reader","Request","Response","Headers","URL","JSON","then","try","catch"]}},computed:{jsText(){let t=this.text;for(let n of this.classes)t=this.setColor(t,n);return t}},methods:{setColor(t,n){let e=new RegExp(`\\b${n}`,"mg"),r=t.split("\n").map(t=>t.split(e).join(`<span class="${n}">${n}</span>`));r=r.join("\n").split("=>").join('<span class="arrow">=></span>');let s=r.match(/`[\s\S][^`]*`/gim);if(s)for(let t of s)r=r.split(t).join(`<span class="literal">${t}</span>`);return r=r.split("•••").join('<span class="replaced">•••</span>'),r},minify:t=>t.split(/[\s]/gim).join("").split(String.fromCharCode(13)).join("").split(String.fromCharCode(10)).join("").split("<").join("&lt;").split(">").join("&gt;")},mounted(){this.$root.$on("validate-answer",function(){let t=this.$el.innerText.split(/<[\s\S][^>]>/gim).join("");this.$emit("update:text",t)}.bind(this))},template:'\n      <code v-html = "jsText"\n            :contenteditable = "contenteditable">\n      </code>\n  '};var o={props:["text"],data:function(){return{attrs:["width","height","src","href","for","onchange","onclick","oninput","id","value","contenteditable","disabled","download","enctype","hidden","integrity","placeholder","target","title","type","wrap","rows","rowspan"]}},computed:{htmlText(){return this.coloringHTML(this.text)}},methods:{coloringHTML(t){let n=t.match(/<[^\s^>]*[\/]*[>]*/gim),e=t.match(/(['"])[^\s]*?\1/gim);if(!n)return t;let r=t.split("class").join("_____");for(let t of n)r=r.split(t).join(`<span class="tag">${t.replace("<","&lt;")}</span>`);for(let t of this.attrs)r=r.split(t).join(`<span class="attr">${t}</span>`);if(e)for(let t of e)r=r.split(t).join(`<span class="values">${t}</span>`);return r=r.split("_____").join('<span class="attr">class</span>'),r}},mounted(){},template:'\n      <code v-html = "htmlText"></code>\n  '};e(122),e(125);const a={props:[],data:function(){return{level:1,showQuize:!0,showResults:!1,status:"work",finish:null}},computed:{score(){this.$root.$store.state.quizData.score},lives(){return this.$root.$store.state.quizData.lives},quizData(){return this.$root.$store.state.quizData},startQuiz(){return this.$root.startQuiz},quizReady(){return this.$root.$store.state.quizReady},currentQuiz(){return this.quizData.levels[this.level-1]},maxScore(){return this.$root.$store.state.quizData.maxScore},results(){return{maxScore:this.$root.$store.state.quizData.maxScore,score:this.$root.$store.state.quizData.score,lives:this.$root.$store.state.quizData.lives}}},template:'\n      <div v-if = "showQuize">\n        <quiz-level :quizData = "currentQuiz"\n                      :level = "level"\n                      v-if = "startQuiz">\n        </quiz-level>\n    </div>\n    ',components:{"quiz-level":{props:["level"],data:function(){return{selected:[],answer:"",lives:this.$root.$store.state.quizData.lives,score:this.$root.$store.state.quizData.score,maxScore:this.$root.$store.state.quizData.maxScore,showResults:!1,levelResults:{right:0,wrong:0}}},components:{"quiz-template":r,"js-code":s,"html-code":o},computed:{quizData(){return JSON.parse(JSON.stringify(this.$parent.currentQuiz))},results(){return{lives:this.$root.$store.state.quizData.lives,score:this.$root.$store.state.quizData.score,maxScore:this.$root.$store.state.quizData.maxScore}},params(){var t=[];return this.quizData.picture&&t.push({slotName:"picture",tabIcon:"insert_photo"}),this.quizData.js&&t.push({slotName:"js",tabSymbol:"{...}"}),this.quizData.html&&t.push({slotName:"html",tabIcon:"code"}),"choice"===this.quizData.type&&t.push({slotName:"choice",tabIcon:"touch_app"}),"input"===this.quizData.type&&t.push({slotName:"text",tabIcon:"keyboard"}),"findError"===this.quizData.type&&t.push({slotName:"findError",tabIcon:"developer_board"}),"finish"===this.quizData.type&&t.push({slotName:"results",tabIcon:"ballot_outline"}),t}},methods:{coloring:(t,n)=>`<code data-language="${n}">${t}</code>`,minify:t=>t.split(/[\s]/gim).join("").split(String.fromCharCode(13)).join("").split(String.fromCharCode(10)).join("").split("<").join("&lt;").split(">").join("&gt;"),findError(){this.$root.$emit("validate-answer");var t=this.minify(this.quizData.wrongContent)===this.minify(this.quizData.rightContent);this.levelResults={right:0+t,wrong:0+!t}},choice(){for(var t of(this.levelResults={right:0,wrong:0},this.selected))this.quizData.rightChoicesNums.indexOf(t)<0?this.levelResults.wrong+=1:this.levelResults.right+=1},input(){let t=this.quizData.rightInput.some(t=>this.minify(this.answer)===this.minify(t));this.levelResults={right:0+t,wrong:0+!t}},finish(){},validateAnswer(){this[this.quizData.type](),this.$root.$store.commit("saveQuizResults",{score:this.levelResults.right*this.quizData.balls,lives:this.levelResults.wrong}),this.lives=this.$root.$store.state.quizData.lives,this.score=this.$root.$store.state.quizData.score,this.showResults=!0,this.snackbar=!0},nextLevel(){this.answer="",this.selected=[],this.$parent.$emit("next-level"),this.showResults=!1},exitQuiz(){this.$root.$emit("exit-quiz")}},mounted(){this.$root.$on("test-results",(function(t){console.log(t)}))},template:'\n    <quiz-template :params = "params">\n        <div slot = "question" v-if = "quizData.type !== \'finish\'" style="padding: 5px 20px">\n            <v-avatar color="warning">{{level}}</v-avatar>\n            {{ quizData.question }}\n        </div>\n\n        <v-card-text slot = "choice" class = "transparent">\n            <v-checkbox color="#fff"\n                        v-for = "( ch, ind ) in quizData.choiceVariants"\n                        :key = "ind"\n                        :label = "ch"\n                        :value = "ind"\n                        hide-details\n                        v-model = "selected">\n            </v-checkbox>\n        </v-card-text>\n\n        <div slot = "picture" v-if = "quizData.picture"\n             class="card card--flat" style="height: auto;">\n           <img class="card__media"\n                style="height: auto; margin: 50px 20px;"\n                :src="quizData.picture"\n           />\n        </div>\n\n        <v-card-text slot = "text" class = "transparent"\n                     v-if = "quizData.type === \'input\'">\n            <v-text-field :suffix = "quizData.inputLegend ?\n                                     quizData.inputLegend.after : \'\'"\n                          :prefix = "quizData.inputLegend ?\n                                     quizData.inputLegend.before : \'\'"\n                          filled\n                          v-model = "answer"\n                          style = "max-width:fit-content;">\n            </v-text-field>\n        </v-card-text>\n\n        <v-card-text slot = "html" class = "transparent"\n                     v-if = "quizData.html">\n            <html-code :text = "quizData.html">\n            </html-code>\n        </v-card-text>\n\n        <v-card slot = "js" class = "transparent"\n                v-if = "quizData.js">\n              <js-code :text = "quizData.js"\n                        contenteditable=false>\n              </js-code>\n        </v-card>\n\n        <v-card-text slot = "findError"\n                     v-if = "quizData.type === \'findError\'">\n              <js-code v-bind:text.sync = "quizData.wrongContent"\n                       contenteditable = true>\n              </js-code>\n        </v-card-text>\n\n        <v-card-text slot = "results" :class="quizData.fone"\n                     v-if = "quizData.type === \'finish\'">\n              <v-container fluid grid-list-lg>\n                  <v-avatar size = "100px">\n                    <img :src = "quizData.results.userPhoto">\n                  </v-avatar>\n                  <h3>{{quizData.results.userName}}</h3>\n              </v-container>\n            <hr/>\n              <v-container fluid grid-list-lg>\n                  <h4 class = "white--text text--shadow">\n                      <v-icon x-large class = "warning--text">\n                        assessment\n                      </v-icon>\n                      Набрано очков {{ quizData.results.score }}\n                  </h4>\n                  <h4 class = "white--text text--shadow">\n                      <v-icon x-large class= "white--text">\n                            stars\n                      </v-icon>\n                      из {{ quizData.results.maxScore }} возможных\n                  </h4>\n                  <h4 class = "white--text text--shadow">\n                      <v-icon x-large>\n                          battery_charging_full\n                      </v-icon> Осталось жизней {{ quizData.results.lives }}\n                  </h4>\n              </v-container>\n        </v-card-text>\n      </quiz-template>\n  '}},methods:{finishCallback(){this.level=this.quizData.levels.length+1,this.$root.$store.commit("saveAttemptResult"),this.$root.$store.commit("pushLevelData",{results:{userPhoto:this.$root.$store.state.userInfo.photoURL||`https://www.shareicon.net/data/2015/12/14/2078${10+Math.round(10*Math.random())}_face_300x300.png`,userName:`${this.$root.$store.state.userInfo.fname} ${this.$root.$store.state.userInfo.name}`,score:this.results.score,lives:Math.max(this.lives,0),maxScore:this.results.maxScore},type:"finish",fone:this.lives<=0?"failureSlide":this.results.score===this.results.maxScore?"successSlide":"finishSlide"}),this.$root.$store.dispatch("saveResults")}},mounted:function(){this.$on("save-quiz-level-results",(function(t){this.$root.$store.commit("saveQuizResults",t)})),this.$on("next-level",(function(){this.level+=1,this.showResults=!1,(this.lives<=0||this.level>this.quizData.levels.length)&&this.finishCallback()})),this.$root.$on("exit-quiz",(function(){this.showQuize=!1}))}};n.default=a}}]);